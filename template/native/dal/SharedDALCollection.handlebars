import{
  {{#each dals}}
  {{this.className}},
  {{/each}}
} from './index';

interface IDALCollection {

  {{#each dals}}
  get{{this.className}}: () => {{this.className}};

  {{/each}}
}

export class SharedDALCollection implements IDALCollection {

  {{#each dals}}
  private {{this.variable}}?: {{this.className}};
  
  {{/each}}

  {{#each dals}}
  public get{{this.className}} = () => {
    if(!this.{{this.variable}}){
      this.{{this.variable}} = new {{this.className}}();
    }
    return this.{{this.variable}};
  };

  {{/each}}
}

export class DefaultDALCollection implements IDALCollection {

  private static dalCollection: SharedDALCollection;

  private ensureDalCollection(): SharedDALCollection {
    if (!DefaultDALCollection.dalCollection) {
      DefaultDALCollection.dalCollection = new SharedDALCollection();
    }
    return DefaultDALCollection.dalCollection;
  }

  public static getDALCollection(): SharedDALCollection {
    if (!DefaultDALCollection.dalCollection) {
      DefaultDALCollection.dalCollection = new SharedDALCollection();
    }
    return DefaultDALCollection.dalCollection;
  }

  {{#each dals}}
  get{{this.className}} = () => {
    return this.ensureDalCollection().get{{this.className}}();
  };

  {{/each}}
}
